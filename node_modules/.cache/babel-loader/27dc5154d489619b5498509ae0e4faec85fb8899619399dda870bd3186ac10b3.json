{"ast":null,"code":"var _jsxFileName = \"D:\\\\Meta-Admin\\\\src\\\\Components\\\\View Files\\\\FieldArray.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArrayField = () => {\n  _s();\n  const {\n    register,\n    control,\n    handleSubmit,\n    reset,\n    trigger,\n    setError\n  } = useForm({\n    // defaultValues: {}; you can populate the fields by this attribute \n  });\n  const {\n    fields,\n    append,\n    remove\n  } = useFieldArray({\n    control,\n    name: \"test\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(data => console.log(data)),\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fields.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"outline-none py-2 pr-4 block w-full\",\n          ...register(`test.${index}.firstName`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"outline-none py-2 pr-4 block w-full\",\n          ...register(`test.${index}.lastName`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"outline-none py-2 pr-4 block w-full\",\n          ...register(`test.${index}.email`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"outline-none py-2 pr-4 block w-full\",\n          ...register(`test.${index}.`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          render: _ref => {\n            let {\n              field\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"input\", {\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 38\n            }, this);\n          },\n          name: `test.${index}.firstName`,\n          control: control\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => remove(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => append(),\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ArrayField, \"KsA9anmO9qfJYq3Aj1ftpuf2y+g=\", false, function () {\n  return [useForm, useFieldArray];\n});\n_c = ArrayField;\nexport default ArrayField;\nvar _c;\n$RefreshReg$(_c, \"ArrayField\");","map":{"version":3,"names":["React","useForm","useFieldArray","Controller","ArrayField","register","control","handleSubmit","reset","trigger","setError","fields","append","remove","name","data","console","log","map","item","index","field","id"],"sources":["D:/Meta-Admin/src/Components/View Files/FieldArray.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useForm, useFieldArray ,Controller} from \"react-hook-form\";\r\n\r\nconst  ArrayField =() =>{\r\n  const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n    // defaultValues: {}; you can populate the fields by this attribute \r\n  });\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"test\"\r\n  });\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit(data => console.log(data))}>\r\n      <ul>\r\n        {fields.map((item, index) => (\r\n          <li key={item.id}>\r\n            \r\n            <input class=\"outline-none py-2 pr-4 block w-full\" {...register(`test.${index}.firstName`)} />\r\n            <input class=\"outline-none py-2 pr-4 block w-full\" {...register(`test.${index}.lastName`)} />\r\n            <input class=\"outline-none py-2 pr-4 block w-full\" {...register(`test.${index}.email`)} />\r\n            <input class=\"outline-none py-2 pr-4 block w-full\" {...register(`test.${index}.`)} />\r\n            <Controller\r\n              render={({ field }) => <input {...field} />}\r\n              name={`test.${index}.firstName`}\r\n\r\n              control={control}\r\n            />\r\n            <button type=\"button\" onClick={() => remove(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => append()}\r\n      >\r\n        Add\r\n      </button>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\nexport default ArrayField\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,aAAa,EAAEC,UAAU,QAAO,iBAAiB;AAAC;AAEpE,MAAOC,UAAU,GAAE,MAAK;EAAA;EACtB,MAAM;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,YAAY;IAAEC,KAAK;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGT,OAAO,CAAC;IAC5E;EACF,CAAC,CAAC;EACF,MAAM;IAAEU,MAAM;IAAEC,MAAM;IAAEC;EAAO,CAAC,GAAGX,aAAa,CAAC;IAC/CI,OAAO;IACPQ,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,oBACE;IAAM,QAAQ,EAAEP,YAAY,CAACQ,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAE;IAAA,wBACtD;MAAA,UACGJ,MAAM,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB;QAAA,wBAEE;UAAO,KAAK,EAAC,qCAAqC;UAAA,GAAKf,QAAQ,CAAE,QAAOe,KAAM,YAAW;QAAC;UAAA;UAAA;UAAA;QAAA,QAAI,eAC9F;UAAO,KAAK,EAAC,qCAAqC;UAAA,GAAKf,QAAQ,CAAE,QAAOe,KAAM,WAAU;QAAC;UAAA;UAAA;UAAA;QAAA,QAAI,eAC7F;UAAO,KAAK,EAAC,qCAAqC;UAAA,GAAKf,QAAQ,CAAE,QAAOe,KAAM,QAAO;QAAC;UAAA;UAAA;UAAA;QAAA,QAAI,eAC1F;UAAO,KAAK,EAAC,qCAAqC;UAAA,GAAKf,QAAQ,CAAE,QAAOe,KAAM,GAAE;QAAC;UAAA;UAAA;UAAA;QAAA,QAAI,eACrF,QAAC,UAAU;UACT,MAAM,EAAE;YAAA,IAAC;cAAEC;YAAM,CAAC;YAAA,oBAAK;cAAA,GAAWA;YAAK;cAAA;cAAA;cAAA;YAAA,QAAI;UAAA,CAAC;UAC5C,IAAI,EAAG,QAAOD,KAAM,YAAY;UAEhC,OAAO,EAAEd;QAAQ;UAAA;UAAA;UAAA;QAAA,QACjB,eACF;UAAQ,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAE,MAAMO,MAAM,CAACO,KAAK,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB;MAAA,GAZ5DD,IAAI,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAcjB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL;MACE,IAAI,EAAC,QAAQ;MACb,OAAO,EAAE,MAAMV,MAAM,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGjB,eACT;MAAO,IAAI,EAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClB;AAEX,CAAC;AAAA,GAtCMR,UAAU;EAAA,QACuDH,OAAO,EAG1CC,aAAa;AAAA;AAAA,KAJ3CE,UAAU;AAuCjB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}