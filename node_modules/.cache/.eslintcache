[{"D:\\Meta-Admin\\src\\index.js":"1","D:\\Meta-Admin\\src\\App.js":"2","D:\\Meta-Admin\\src\\Components\\Dashboard.js":"3","D:\\Meta-Admin\\src\\Components\\Add New File\\RecipesAdmin.js":"4","D:\\Meta-Admin\\src\\Components\\Add Installment\\pagination.js":"5","D:\\Meta-Admin\\src\\Components\\Add New File\\AddCommunities.js":"6","D:\\Meta-Admin\\src\\Components\\Registeration.jsx":"7","D:\\Meta-Admin\\src\\Components\\Login.jsx":"8","D:\\Meta-Admin\\src\\Components\\Add New File\\AddNewFile.jsx":"9","D:\\Meta-Admin\\src\\Components\\Add New File\\updateFile.jsx":"10","D:\\Meta-Admin\\src\\Components\\Add Installment\\AddInstallment.jsx":"11","D:\\Meta-Admin\\src\\Components\\View Files\\ViewFiles.jsx":"12","D:\\Meta-Admin\\src\\Components\\Home\\Home.jsx":"13","D:\\Meta-Admin\\src\\Components\\Add Installment\\ModalAddInstallment.jsx":"14","D:\\Meta-Admin\\src\\Components\\View Files\\FieldArray.jsx":"15","D:\\Meta-Admin\\src\\Components\\View Files\\ModalViewInstallment.jsx":"16","D:\\Meta-Admin\\src\\Components\\View Files\\plots.jsx":"17","D:\\Meta-Admin\\src\\Components\\View Files\\UpdateCommunities.jsx":"18","D:\\Meta-Admin\\src\\Components\\View Files\\UpdateCommunities1.jsx":"19","D:\\Meta-Admin\\src\\Components\\Logout\\Logout.jsx":"20","D:\\Meta-Admin\\src\\Components\\View Files\\ViewAboutus.jsx":"21","D:\\Meta-Admin\\src\\apis\\baseurl.js":"22","D:\\Meta-Admin\\src\\Components\\Sidebar\\Sidebar.jsx":"23"},{"size":265,"mtime":1669102922000,"results":"24","hashOfConfig":"25"},{"size":2816,"mtime":1680385430000,"results":"26","hashOfConfig":"25"},{"size":4888,"mtime":1686472024000,"results":"27","hashOfConfig":"25"},{"size":12658,"mtime":1680548784000,"results":"28","hashOfConfig":"25"},{"size":1560,"mtime":1669622180000,"results":"29","hashOfConfig":"25"},{"size":12422,"mtime":1685906916000,"results":"30","hashOfConfig":"25"},{"size":5002,"mtime":1673426122000,"results":"31","hashOfConfig":"25"},{"size":4852,"mtime":1686567747615,"results":"32","hashOfConfig":"25"},{"size":373,"mtime":1680297260000,"results":"33","hashOfConfig":"25"},{"size":5001,"mtime":1686902768709,"results":"34","hashOfConfig":"25"},{"size":8065,"mtime":1669805564000,"results":"35","hashOfConfig":"25"},{"size":7832,"mtime":1686910751679,"results":"36","hashOfConfig":"25"},{"size":1337,"mtime":1686898329151,"results":"37","hashOfConfig":"25"},{"size":5282,"mtime":1669102922000,"results":"38","hashOfConfig":"25"},{"size":1476,"mtime":1669102922000,"results":"39","hashOfConfig":"25"},{"size":4528,"mtime":1669102922000,"results":"40","hashOfConfig":"25"},{"size":8402,"mtime":1680113054000,"results":"41","hashOfConfig":"25"},{"size":8662,"mtime":1680385498000,"results":"42","hashOfConfig":"25"},{"size":14712,"mtime":1669839642000,"results":"43","hashOfConfig":"25"},{"size":317,"mtime":1669102922000,"results":"44","hashOfConfig":"25"},{"size":7624,"mtime":1686901366021,"results":"45","hashOfConfig":"25"},{"size":189,"mtime":1680151394000,"results":"46","hashOfConfig":"25"},{"size":5126,"mtime":1686911228156,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5izchw",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Meta-Admin\\src\\index.js",[],[],"D:\\Meta-Admin\\src\\App.js",["127","128","129"],[],"import React from 'react'\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Login from './Components/Login';\r\nimport Registeration from './Components/Registeration';\r\nimport Home from \"./Components/Home/Home\";\r\nimport ViewFiles from \"./Components/View Files/ViewFiles\";\r\nimport AddNewFile from \"./Components/Add New File/AddNewFile\";\r\nimport Logout from \"./Components/Logout/Logout\";\r\nimport AddInstallment from \"./Components/Add Installment/AddInstallment\";\r\nimport PlotsForm from './Components/View Files/plots';\r\nimport ArrayField from './Components/View Files/FieldArray';\r\nimport Modal from './Components/View Files/ModalViewInstallment';\r\nimport UpdateFile from './Components/Add New File/updateFile';\r\nimport ModalUpdate from './Components/Add Installment/ModalAddInstallment';\r\nimport Dashboard from './Components/Dashboard';\r\nimport PaginatedItems from './Components/Add Installment/pagination';\r\nimport PaginatedItemss from './Components/View Files/ViewFiles';\r\nimport RecipesAdmin from './Components/Add New File/RecipesAdmin';\r\nimport AddCommunities from './Components/Add New File/AddCommunities';\r\nimport PaginatedItemsss from './Components/View Files/UpdateCommunities';\r\nimport UpdateCommunities from './Components/View Files/UpdateCommunities1';\r\nimport AboutItems from './Components/View Files/ViewAboutus';\r\nimport ViewImageProductFiles from './Components/View Files/UpdateCommunities';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/register\" element={<Registeration/>}/>\r\n        <Route path=\"/\" element={<Login/>}/>\r\n        <Route path=\"Home\" element={<Home />}/>\r\n        {/* <Route path=\"Login\" element={<Login/>}/> */}\r\n        <Route path=\"/AddNewFile\" element={<AddNewFile/>}/>\r\n       \r\n        <Route path=\"AddInstallment\" element={<AddInstallment />}/>\r\n        <Route path=\"Logout\" element={<Logout/>}/>\r\n        <Route path=\"/plots\" element={<PlotsForm/>}/>\r\n        <Route path=\"/array\" element={<ArrayField/>}/>\r\n        <Route path=\"/ViewFiles\" element={<PaginatedItemss itemsPerPage={20}/>}/>\r\n        <Route path=\"/Viewcommunities\" element={<ViewImageProductFiles/>}/>\r\n        <Route path=\"/aboutus\" element={<AboutItems itemsPerPage={20}/>}/>\r\n        <Route path=\"/installments/:id\" element={<Modal/>}/>\r\n        <Route path=\"/update/:id\" element={<UpdateFile/>}/>\r\n        <Route path=\"/modal/:id\" element={<ModalUpdate/>}/>\r\n        <Route path=\"/dashboard\" element={<Dashboard/>}/>\r\n        <Route path=\"/addrecipes\" element={<RecipesAdmin/>}/>\r\n        <Route path=\"/addcommunities\" element={<AddCommunities/>}/>\r\n        <Route path=\"/updatecommunities/:id\" element={<UpdateCommunities/>}/>\r\n        \r\n\r\n      </Routes>\r\n   \r\n    </Router>\r\n    </>\r\n    \r\n  )\r\n \r\n}\r\n\r\nexport default App","D:\\Meta-Admin\\src\\Components\\Dashboard.js",["130","131","132","133","134","135","136","137"],[],"D:\\Meta-Admin\\src\\Components\\Add New File\\RecipesAdmin.js",["138","139","140","141","142","143","144","145","146","147","148","149","150"],[],"import React from \"react\";\r\nimport { useState , useEffect } from \"react\";\r\n// import { useSelector } from 'react-redux';\r\nimport { useForm, useFieldArray ,Controller} from \"react-hook-form\";\r\n// import { useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import '../index.css';\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst RecipesAdmin = () => {\r\n  // const dispatch = useDispatch();\r\n  const [file , setFile]=useState();\r\n  const [itWorks, setItWorks] = useState(false);\r\n    const [fileObj, setFileObject] = useState([]);\r\n    const [fileArray, setFileArray] = useState([]);\r\n    \r\n  // const { register, errors, handleSubmit } = useForm();\r\n  const [fieldss, setFields] = useState([{ value: null }]);\r\n  const navigate = useNavigate();\r\n  const uploadMultipleFiles = (e) => {\r\n    console.log(\"1\");\r\n    setFile(e.target.files);\r\n    fileObj.splice(0, fileObj.length);\r\n    fileArray.splice(0, fileArray.length);\r\n    fileObj.splice(0, fileObj.length);\r\n    fileArray.splice(0, fileArray.length);\r\n    fileObj.push(e.target.files);\r\n    for (let i = 0; i < fileObj[0].length; i++) {\r\n      fileArray.push(URL.createObjectURL(fileObj[0][i]));\r\n    }\r\n  };\r\n  // const fetchData =async () => {\r\n  //   return await fetch(\"http://localhost:3000/api/details/getaboutUs\")\r\n  //         .then((response) => response.json())\r\n  //         .then((data) => console.log(data));}\r\n  //         useEffect(() => {\r\n  //           fetchData();\r\n  //           });\r\n            const fetchsData =async () => {\r\n              return await axios.get(\"http://localhost:3000/api/recipes/getrecipes\")\r\n                    .then((response) => console.log(response.data));}\r\n                    useEffect(() => {\r\n                      fetchsData();\r\n                      },[]);\r\n  function handleChange(i, event) {\r\n    const values = [...fields];\r\n    values[i].value = event.target.value;\r\n    setFields(values);\r\n  }\r\n//  const  ImageUploader = async(value)=>{\r\n  // if(file){\r\n    // const formData = new FormData();\r\n    // formData.append(\"image\" , file)\r\n    // const responses = await fetch(\"http://localhost:3000/api/picture\",{\r\n    //   method : \"POST\",\r\n    //   body : formData\r\n    // }).then(responses =>responses.json())\r\n    // alert(JSON.stringify(responses))\r\n    \r\n      // dispatch(createRecipe(file))\r\n      \r\n  // }\r\n  // else{\r\n  //   console.log(\"No file\")\r\n  // }\r\n//   console.log(file);\r\n//   if(file){\r\n//   const formData = new FormData();\r\n//   formData.append('image', file);\r\n//   axios.post('http://localhost:3000/api/recipes/setrecipes').then((res)=>{\r\n//   console.log(\"res\",res);\r\n//   })\r\n// }\r\n// else{\r\n//   alert(\"error\")\r\n// }\r\n//   }\r\n  function handleAdd() {\r\n    const values = [...fields];\r\n    values.push({ value: null });\r\n    setFields(values);\r\n  }\r\n\r\n  function handleRemove(i) {\r\n    const values = [...fields];\r\n    values.splice(i, 1);\r\n    setFields(values);\r\n  }\r\n  \r\n\r\n  // const onSubmit = async (data) => {\r\n  //   // const fields = { fields: data };\r\n  // };\r\n  \r\n  const { control, register, handleSubmit , reset, formState: { errors }, } = useForm();\r\n  const {fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"steps\",\r\n    names: \"ingredients\"\r\n  });\r\n  // const createRecipe =useSelector(store=>store.CreateRecipe);\r\n  const handleRegistration = async (values)=>{\r\n    try{\r\n     \r\n    \r\n          console.log(file)\r\n          // const datas = new FormData();\r\n          // datas.append('file', file);\r\n          // console.log(file);\r\n          console.log(values)\r\n          // const send={datas,values};\r\n          try {\r\n              const { data } = await axios.post(\"http://localhost:8080/api/product/createproduct\",values)\r\n                  // {\r\n                  //     headers: {\r\n                  //         mode: 'no-cors',\r\n                  //         // 'Authorization': `${admin}`,\r\n                  //         accept: \"application/json\",\r\n                  //         \"Content-Type\": \"multipart/form-data\",\r\n\r\n                  //     },\r\n                  // }\r\n\r\n              \r\n             console.log(data)\r\n\r\n              if (data) {\r\n\r\n                  alert('Product Added Successfully')\r\n                  reset();\r\n                \r\n              }\r\n\r\n          } catch (err) {\r\n              console.log(err)\r\n          }\r\n      \r\n      \r\n  }catch(error){\r\n     console.log(error);\r\n\r\n  }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n       <div className='addNewFile'>\r\n        <Sidebar />\r\n        <div className=\"addNewFileContainer\">\r\n          \r\n      \r\n      <h1 className=\"text-center text-[#8d4199] font-serif  flex justify-center     text-7xl font-semibold mt-10\">3D PRODUCT</h1>\r\n      <form\r\n        className=\"w-[70%] bg-white m-auto rounded shadow-xl py-10 spacing-y-4 mt-9 px-12 border \"\r\n        // onSubmit={handleSubmit(onSubmit) }\r\n        onSubmit={handleSubmit(handleRegistration)}\r\n      >\r\n        <label className=\"text-gray-600  font-bold\">Title</label>\r\n        <input\r\n          className=\"border-solid border-gray-300 border outline-none py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"title\"\r\n          placeholder=\"Enter Product Title...\"\r\n          // autoFocus\r\n          // ref={register({\r\n          //   required: \"Please enter a job title\",\r\n          // })}\r\n          name=\"title\" {...register('title', { required: \"title is required.\" })}\r\n        />\r\n          {errors.title && errors.title.message && <div className=\"text-red-500\">{errors.title.message}</div>}\r\n          <label className=\"text-gray-600 py-2  font-bold\" htmlFor=\"category\">Choose a category:</label>\r\n\r\n          <select className=\"border-solid border-gray-300 border outline-none py-2 px-4 w-full rounded text-gray-700\" {...register(\"category\", { required: \"Please select a category\" })}>\r\n        <option value=\"\">--Select--</option>\r\n        <option value=\"men\">Men</option>\r\n        <option value=\"women\">Women</option>\r\n        <option value=\"bags\">Bags</option>\r\n        <option value=\"shirts\">Shirts</option>\r\n        <option value=\"shoes\">Shoes</option>\r\n      </select>\r\n      {errors.category && <p>{errors.category.message}</p>}<br/>\r\n        <label className=\"text-gray-600  font-bold\">3D Image Url</label>\r\n        <input\r\n          className=\"border-solid border-gray-300 border outline-none py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"title\"\r\n          placeholder=\"Enter 3D Image Url\"\r\n          // autoFocus\r\n          // ref={register({\r\n          //   required: \"Please enter a job title\",\r\n          // })}\r\n          name=\"image\" {...register('image', { required: \"ImageUrl is required.\" })}\r\n        />\r\n       {errors.image && errors.image.message && <div className=\"text-red-500\">{errors.image.message}</div>}\r\n        \r\n        {/* <div className=\" flex justify-center items-center\">\r\n                    {(fileArray || []).map((url) => (\r\n\r\n    <img\r\n  style={{ width:\"500px\", height: \"300px\" }}\r\n  src={url}\r\n  alt=\"...\"\r\n  key={url}\r\n  className=\"p-4 border-2 border-orange-500 mx-2 my-2\"\r\n \r\n/>\r\n\r\n  ))}\r\n  <div className=\"w-full mt-3 flex justify-center items-center\">\r\n   {file && <img className='h-[15rem] w-full' src={URL.createObjectURL(file)}\r\n  alt='img' />}\r\n  </div>\r\n  </div>\r\n        <div class=\"flex max-w-full justify-center mt-8\">\r\n    <div class=\"rounded-lg border-solid border-gray-300 bg-gray-50 w-full\">\r\n        <div class=\"m-4\">\r\n          \r\n            <div class=\"flex items-center justify-center w-full\">\r\n                <label class=\"flex flex-col w-full h-32 border-4 border-dashed hover:bg-gray-100 hover:border-gray-300\">\r\n                    <div class=\"flex flex-col items-center justify-center pt-7\">\r\n                      \r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                            class=\"w-12 h-12 text-gray-400 group-hover:text-gray-600\" viewBox=\"0 0 20 20\"\r\n                            fill=\"currentColor\">\r\n                            <path fill-rule=\"evenodd\"\r\n                                d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\"\r\n                                clip-rule=\"evenodd\" />\r\n                        </svg>\r\n                        \r\n                        <p class=\"pt-1 text-sm cursor-pointer tracking-wider text-gray-400 group-hover:text-gray-600\">\r\n                            Select a photo </p>\r\n                    </div>\r\n                    \r\n                    <input\r\n                      type=\"file\"\r\n                      \r\n                      className=\"form-control hidden\"\r\n                     \r\n                      onChange= {(e)=>setFile(e.target.files[0])}\r\n                      name=\"image\"\r\n                      accept=\"image/*\"\r\n                    />\r\n                </label>\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n</div> */}\r\n<label className=\"text-gray-600 font-bold  text-3x1 block \">Price in Dollars</label>\r\n        \r\n         \r\n        <input\r\n          className=\"border-solid border-gray-300 border py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"location\"d\r\n          type=\"text\"\r\n          placeholder=\"#\"\r\n          // ref={register({\r\n          //   required: \"Please enter a location\",\r\n          // })}\r\n          name=\"priceinDollars\" {...register('priceinDollars', { required: \"Price is required.\" })}\r\n        />\r\n        {errors.priceinDollars && errors.priceinDollars.message && <div className=\"text-red-500\">{errors.priceinDollars.message}</div>}\r\n         <label className=\"text-gray-600 font-bold  text-3x1 block \">Price in PKR</label>\r\n        \r\n         \r\n        <input\r\n          className=\"border-solid border-gray-300 border py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"location\"d\r\n          type=\"text\"\r\n          placeholder=\"#\"\r\n          // ref={register({\r\n          //   required: \"Please enter a location\",\r\n          // })}\r\n          name=\"priceinPkr\" {...register('priceinPkr', { required: \"Price is required.\" })}\r\n        />\r\n        {errors.priceinPkr && errors.priceinPkr.message && <div className=\"text-red-500\">{errors.priceinPkr.message}</div>}\r\n     \r\n         <label className=\"text-gray-600 font-bold  text-3x1 block \">Colors</label>\r\n        \r\n         \r\n        <input\r\n          className=\"border-solid border-gray-300 border py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"location\"d\r\n          type=\"text\"\r\n          placeholder=\"Enter Available colors...\"\r\n          // ref={register({\r\n          //   required: \"Please enter a location\",\r\n          // })}\r\n          name=\"colors\" {...register('colors', { required: \"Colors is required.\" })}\r\n        />\r\n         {errors.colors && errors.colors.message && <div className=\"text-red-500\">{errors.colors.message}</div>}\r\n        \r\n         <label className=\"text-gray-600 font-bold  text-3x1 block \">Total Quantity</label>\r\n        \r\n         \r\n        <input\r\n          className=\"border-solid border-gray-300 border py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"location\"d\r\n          type=\"text\"\r\n          placeholder=\"Enter Quantity\"\r\n          // ref={register({\r\n          //   required: \"Please enter a location\",\r\n          // })}\r\n          name=\"quantity\" {...register('quantity', { required: \"Quantity is required.\" })}\r\n        />\r\n         {errors.quantity && errors.quantity.message && <div className=\"text-red-500\">{errors.quantity.message}</div>}\r\n        <label className=\"text-gray-600 font-bold block mt-1\">\r\n         Product Description\r\n        </label>\r\n        <textarea\r\n          className=\"border-solid border-gray-300 border py-5 px-4 w-full rounded text-gray-700\"\r\n          placeholder=\"Write Description for the Product\"\r\n          // name=\"description\"\r\n          rows={5}\r\n          cols={5}\r\n          // ref={register({\r\n          //   required: \"Please enter a job description\",\r\n          // })}\r\n          name=\"description\" {...register('description', { required: \"description is required.\" })}\r\n        />\r\n         {errors.description && errors.description.message && <div className=\"text-red-500\">{errors.description.message}</div>}\r\n        \r\n        <button\r\n          className=\"mt-4 w-full bg-[#8d4199] font-serif hover:bg-green-600 text-green-100 border py-3 px-6 font-semibold text-md rounded\"\r\n          type=\"submit\"\r\n        >\r\n          Save the Product\r\n        </button>\r\n      </form>\r\n      </div>\r\n    </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RecipesAdmin;","D:\\Meta-Admin\\src\\Components\\Add Installment\\pagination.js",["151","152","153","154"],[],"import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nconst items = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\nfunction Items({ currentItems }) {\r\n  return (\r\n    <>\r\n      {currentItems &&\r\n        currentItems.map((item,index) => (\r\n          <div key={index}>\r\n            <h3>Item #{item}</h3>\r\n          </div>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PaginatedItems=({ itemsPerPage })=> {\r\n  \r\n  const [itemOffset, setItemOffset] = useState(0);\r\n\r\n \r\n  const endOffset = itemOffset + itemsPerPage;\r\n  console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n  const currentItems = items.slice(itemOffset, endOffset);\r\n  const pageCount = Math.ceil(items.length / itemsPerPage);\r\n\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * itemsPerPage) % items.length;\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Items currentItems={currentItems} /> */}\r\n      <div className='border border-2 mt-[500px]'>\r\n      <ReactPaginate\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={()=>handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< previous\"\r\n        renderOnZeroPageCount={null}\r\n      />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default  PaginatedItems ","D:\\Meta-Admin\\src\\Components\\Add New File\\AddCommunities.js",["155","156","157","158","159","160","161","162","163","164","165","166","167"],[],"D:\\Meta-Admin\\src\\Components\\Registeration.jsx",[],[],"D:\\Meta-Admin\\src\\Components\\Login.jsx",["168","169","170","171","172","173","174"],[],"D:\\Meta-Admin\\src\\Components\\Add New File\\AddNewFile.jsx",[],[],"D:\\Meta-Admin\\src\\Components\\Add New File\\updateFile.jsx",["175"],[],"D:\\Meta-Admin\\src\\Components\\Add Installment\\AddInstallment.jsx",["176","177","178","179","180","181","182","183","184"],[],"import React from 'react'\r\nimport axios from 'axios';\r\nimport \"./addInstallment.scss\"\r\nimport Sidebar from '../Sidebar/Sidebar'\r\nimport { useState , useEffect } from \"react\";\r\nimport { useForm, useFieldArray ,Controller} from \"react-hook-form\";\r\nimport {baseURL} from '../../apis/baseurl';\r\nimport  {useNavigate, useParams} from 'react-router-dom'\r\nimport Modal from './ModalAddInstallment';\r\n\r\nconst AddInstallment = () => {\r\n  const navigate = useNavigate();\r\n  const [datasss,setData] =useState([]);\r\n  const [deleted,selectDeleted]= useState();\r\n  const [search, setSearch] = useState();\r\n  console.log(search);\r\n  const param = useParams();\r\n   \r\n  const [modalOn, setModalOn] = useState(false);\r\n\r\n  const clicked = () =>{\r\n    setModalOn(true)\r\n  }\r\n \r\n  // console.log(id);\r\n  // const \r\n  useEffect( () => {\r\n    async function data(){\r\n  //  await axios.get(\"http://localhost:5000/api/v1/plot/getplot\")\r\n  await fetch(`${baseURL}/api/v1/plot/getplots`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `This is an HTTP error: The status is ${response.status}`\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((actualData) =>{\r\n        if(actualData!== [] || \"\"){\r\n        setData(actualData);\r\n        console.log(\"Plots Details\",actualData)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n      // setData(actualData)\r\n    }\r\n    data();\r\n  }, []);\r\n  // console.log(\"PLOTS DETAILS\",datasss);\r\n  const deletePlots =async ()=>{\r\n       console.log(\"deleted\",deleted);\r\n       if(deleted !== undefined || []){\r\n      try{\r\n      // let deleted=\"6368b1922a6b1af86c8b1807\";\r\n    //  let id = param.deleted\r\n    //  console.log(\"Idsss\",id);\r\n    // let value = deleted;\r\n      await axios.delete(`${baseURL}/api/v1/plot/deletePlots`, {\r\n        data: {\r\n          deleted,\r\n        },\r\n      });\r\n\r\n      } \r\n    catch(err){\r\n      console.log(err);\r\n    }\r\n     console.log(\"id\",deleted)\r\n  }\r\n}\r\n    //  deletePlots();\r\n  return (\r\n    <div className='viewFiles'>\r\n       <Sidebar />\r\n\r\n       {//Add Installment Modals\r\n       }\r\n       \r\n       <div className=\"viewFilesContainer overflow-scroll h-screen\" style={{\r\n        padding:\"2%\"\r\n       }}>\r\n       \r\n        {modalOn && <Modal setModalOn={setModalOn} />}\r\n        <input onChange={(e)=>setSearch(e.target.value)} style={{borderRadius: '50px'}} type=\"text\" class=\" text-black-700 border border-2 border-blue-700  hover:border-2 w-48 bg-gray-100 p-2 my-1 hover:p-2 hover:my-1\" placeholder='search'/>\r\n        \r\n        <table class=\"w-full table-auto\">\r\n        <thead class=\"bg-gray-100 border-b-2 border-gray-300 text-left w-full\">\r\n          <tr>\r\n          <th class=\"w-20 p-3 text-sm font-semibold tracking-wide\"> Sr. No </th>\r\n            <th class=\"w-20 p-3 text-sm font-semibold tracking-wide\"> Reg No. </th>\r\n            <th class=\"w-20 p-3 text-sm font-semibold tracking-wide\"> Security Code </th>\r\n            <th class=\"w-20 p-3 text-sm font-semibold tracking-wide\"> Plot Size </th>\r\n            <th class=\"w-20 p-3 text-sm font-semibold tracking-wide\"> Plot No </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Block Name </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Status </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Owner Name </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Owner CNIC </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Owner Address </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Owner Contact </th>\r\n            {/* <th class=\"p-3 text-sm font-semibold tracking-wide\"> Owner Email </th> */}\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Paid Amount </th>\r\n            {/* <th class=\"p-3 text-sm font-semibold tracking-wide\"> Paid Amounts (Remaining) </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Customer Bank Account No </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Remaining Installment</th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Installment Date </th> */}\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Completed Installment </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Total Amount </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\">2</th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> 2</th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> 2</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"items-center justify-between w-full\" >\r\n        {datasss.data && datasss.data.filter((element)=>{\r\n          if(search==\"\" || search==null || search==undefined){\r\n            return element\r\n          }\r\n          else if((element.regNo.includes(search))||(element.securityCode.includes(search))||(element.ownerName.toLowerCase().includes(search))){\r\n            return element\r\n          }\r\n          // return search===\"\" ? element : element.regNo.includes(search);\r\n        }).map((element ,index)=>{  \r\nreturn (\r\n          <tr class=\"bg-white border border-gray-300\" key={index}>\r\n             <td className='w-20 p-3 text-sm text-gray-700'>{index+1}. </td>\r\n            <td className='w-20 p-3 text-sm text-gray-700'>{element.regNo} </td>\r\n            <td className='w-20 p-3 text-sm text-gray-700'> {element.securityCode} </td>\r\n            {/* <td className='p-3 text-sm text-gray-700'> {element.regNo} </td> */}\r\n            <td className='w-20 p-3 text-sm text-gray-700'> {element.plotSize} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element.plotNo} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element.blockName} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element.status} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element.ownerName} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element.ownerCNIC} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element.ownerAddress} </td>\r\n            {/* <td className='p-3 text-sm text-gray-700'> {element.ownerEmail} </td> */}\r\n            <td className='p-3 text-sm text-gray-700'> {element.ownerPhoneNumber} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element.totalPaidAmount}</td>\r\n            {/* <td className='p-3 text-sm text-gray-700'>{element.totalAmount - element.totalPaidAmount} </td> */}\r\n            {/* <td className='p-3 text-sm text-gray-700'>{element.totalNoOfInstallment[].customerBankAccountNo}</td>\r\n            <td className='p-3 text-sm text-gray-700'>{element.totalNoOfInstallment[].remainingInstallment} </td> \r\n            <td className='p-3 text-sm text-gray-700'>{element.totalNoOfInstallment[].remainingInstallment} </td> */}\r\n            <td className='p-3 text-sm text-gray-700'> {element.completedInstallments} </td>\r\n            <td className='p-3 text-sm text-gray-700'>{element.totalAmount} </td>\r\n            <td className='p-3 text-sm text-gray-700'>\r\n              <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded\" onClick={()=>navigate( `/update/${element._id} `)}>Edit</button>\r\n            </td>\r\n            <td className='p-3 text-sm text-gray-700'>\r\n            <button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-4 rounded\" onClick={()=>selectDeleted(element._id)}>Delete</button>\r\n            </td>\r\n\r\n            <td className='p-3 text-sm text-gray-700'>\r\n            <button class=\"bg-green-500 hover:bg-green-700 text-white w-52 text-base font-semibold py-1 px-4 rounded\" onClick={\r\n              ()=>{\r\n               navigate(`/modal/${element._id}`)\r\n                setModalOn(true)\r\n              }\r\n            }>Add Installment</button>\r\n            </td>\r\n\r\n          </tr>\r\n\r\n)})}\r\n        </tbody>\r\n        </table>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddInstallment","D:\\Meta-Admin\\src\\Components\\View Files\\ViewFiles.jsx",["185","186","187","188","189","190","191","192","193","194","195"],[],"D:\\Meta-Admin\\src\\Components\\Home\\Home.jsx",["196"],[],"D:\\Meta-Admin\\src\\Components\\Add Installment\\ModalAddInstallment.jsx",["197","198","199","200","201","202","203"],[],"import React from 'react'\r\nimport { useForm, useFieldArray ,Controller} from \"react-hook-form\";\r\nimport axios from 'axios';\r\nimport {baseURL} from '../../apis/baseurl';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nconst ModalUpdate = ({setModalOn}) =>{\r\n    const handleCancelClick = () => {\r\n        setModalOn(false)\r\n    }\r\n    const navigate = useNavigate();\r\n    const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n        // defaultValues: {}; you can populate the fields by this attribute \r\n      });\r\n      // const createRecipe =useSelector(store=>store.CreateRecipe);\r\n      const id = useParams()\r\n      const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: \"totalNoOfInstallment\"\r\n      });\r\n      const handleRegistration =async (value) =>{\r\n        // let values = {RegNo,status,plotSize,securityCode,plotNo,BlockNo,OwnerPhoneNumber,OwnerName,OwnerCNIC,OwnerEmail,OwnerAddress,TotalPlotPrice,completedInstallments,PaidAmount,value}\r\n          console.log(\"Values\",value);\r\n          try {\r\n           \r\n            // console.log(\"updatedValues\",updatedValues);\r\n            console.log(value, \"form values\");\r\n            // console.log(actions, \"form actionss\");\r\n            // setTrue(true);\r\n            if(value.totalNoOfInstallment[0].customerBankAccountNumber!==\"\" || value.totalNoOfInstallment.paidAmount!==\"\" || value.totalNoOfInstallment.installmentDate!==\"\" || value.totalNoOfInstallment.remainingInstallment!==\"\"){\r\n            const { data } = await axios.put(\r\n              `${baseURL}/api/v1/plot/updateInstallmentById/${id.id}`,\r\n              value,\r\n            )\r\n            \r\n            console.log(data, \"dataaaa\");\r\n            if(data){\r\n             alert(\"Update Successfully\");\r\n            }\r\n            //  navigate(\"/ViewFiles\");\r\n        reset(); \r\n          }\r\n          else{\r\n            console.log(\"Enter values\")\r\n          }\r\n         }catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n    return(\r\n         <form  onSubmit={handleSubmit(handleRegistration)}>\r\n        <div className='bg-zinc-200 fixed inset-0 z-50'>\r\n             {/* {fields.map((item, index) => ( */}\r\n            <div className=\"flex h-screen justify-center items-center\">\r\n          \r\n                <div className=\"flex-col justify-center bg-white py-12 px-12 border-4 border-sky-500 rounded-xl\"  style={{width:\"60%\"}}>\r\n                    \r\n           {/* {fields.map((element,index)=>(\r\n            <> */}\r\n            <label className=\"text-[#DAA520] text-xl font-bold block mt-4\">New Installment</label><hr/>\r\n             <label className=\"text-gray-600 font-bold text-3x1 block mt-4\" name=\"paidAmount\"  type=\"text\" >Paid Amount</label>\r\n            <input class=\"input outline-groove border-2 border-blue-500 py-2 pr-4 block w-full\" name=\"paidAmount\" {...register(`totalNoOfInstallment.${0}.paidAmount`)}  type=\"text\" />\r\n            <label className=\"text-gray-600 font-bold text-3x1 block mt-4\" name=\"customerBankAccountNo\"  type=\"number\">Customer Bank Account No</label>\r\n            <input class=\"input outline-groove border-2 border-blue-500 py-2 pr-4 block w-full\" name=\"customerBankAccountNo\" {...register(`totalNoOfInstallment.${0}.customerBankAccountNo`)}  />\r\n            <label className=\"text-gray-600 font-bold text-3x1 block mt-4\">Remaining Installment</label>\r\n            <input class=\"input outline-groove border-2 border-blue-500 py-2 pr-4 block w-full\" type=\"text\" name=\"remainingInstallment\" {...register(`totalNoOfInstallment.${0}.remainingInstallment`)}/>\r\n            <label className=\"text-gray-600 font-bold text-3x1 block mt-4\"  type=\"date\">Installment Date</label>\r\n            <input class=\"input outline-groove border-2 border-blue-500 py-2 pr-4 block w-full\" type=\"date\" name=\"installmentDate\" {...register(`totalNoOfInstallment.${0}.installmentDate`)} />\r\n        {/* </>\r\n        ))} */}\r\n                    <div class=\"grid grid-cols-3 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 xs:grid-cols-1\">\r\n                        {/* <div class=\"\">\r\n                             <button onClick={()=>append()} className=\"mt-5 rounded w-52 px-4 py-2 text-white bg-[#DAA520] font-serif hover:bg-green-600 \">Add Installment</button>\r\n                        </div> */}\r\n                        {/* <button className=\"mt-4  bg-[#FF0000] font-serif hover:bg-green-600 text-green-100 border py-3 px-6 font-semibold text-md rounded\" type=\"button\" onClick={() => remove(0)}>Delete</button> */}\r\n                        <div class=\"\">\r\n                             <button type=\"submit\" className=\"mt-5 rounded w-52 px-4 py-2 text-white font-serif bg-blue-400 hover:bg-green-600\" >Submit</button>\r\n                        </div>\r\n                        <div class=\"\">\r\n                             <button type=\"submit\" className=\"mt-5 rounded w-52 px-4 py-2 text-white font-serif bg-blue-400 hover:bg-green-600\" onClick={()=>navigate(\"/AddInstallment\")} >Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               \r\n             \r\n            \r\n          \r\n            </div>\r\n             {/* ))} */}\r\n        </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ModalUpdate","D:\\Meta-Admin\\src\\Components\\View Files\\FieldArray.jsx",["204","205","206"],[],"import React from \"react\";\r\nimport { useForm, useFieldArray ,Controller} from \"react-hook-form\";\r\n\r\nconst  ArrayField =() =>{\r\n  const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n    // defaultValues: {}; you can populate the fields by this attribute \r\n  });\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"test\"\r\n  });\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit(data => console.log(data))}>\r\n      <ul>\r\n        {fields.map((item, index) => (\r\n          <li key={item.id}>\r\n            \r\n            <input class=\"outline-none py-2 pr-4 block w-full\" {...register(`test.${index}.firstName`)} />\r\n            <input class=\"outline-none py-2 pr-4 block w-full\" {...register(`test.${index}.lastName`)} />\r\n            <input class=\"outline-none py-2 pr-4 block w-full\" {...register(`test.${index}.email`)} />\r\n            <input class=\"outline-none py-2 pr-4 block w-full\" {...register(`test.${index}.`)} />\r\n            <Controller\r\n              render={({ field }) => <input {...field} />}\r\n              name={`test.${index}.firstName`}\r\n\r\n              control={control}\r\n            />\r\n            <button type=\"button\" onClick={() => remove(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => append()}\r\n      >\r\n        Add\r\n      </button>\r\n      <input type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\nexport default ArrayField\r\n","D:\\Meta-Admin\\src\\Components\\View Files\\ModalViewInstallment.jsx",["207","208","209"],[],"import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport {baseURL} from '../../apis/baseurl';\r\nimport { useNavigate } from 'react-router-dom'\r\nconst Modal = ({setModalOn}) =>{\r\n  const navigate = useNavigate();\r\n    const [datasss,setData] =useState([]);\r\n    const [deleted,selectDeleted]= useState();\r\n     const id = useParams();\r\n     console.log(\"id\",id.id);\r\n    useEffect( () => {\r\n        async function data(){\r\n      //  await axios.get(\"http://localhost:5000/api/v1/plot/getplot\")\r\n      await fetch(`${baseURL}/api/v1/plot/getplots`)\r\n          .then((response) => {\r\n            if (!response.ok) {\r\n              throw new Error(\r\n                `This is an HTTP error: The status is ${response.status}`\r\n              );\r\n            }\r\n            return response.json();\r\n          })\r\n          .then((actualData) =>{\r\n            if(actualData!== [] || \"\"){\r\n            setData(actualData);\r\n            console.log(\"Plots Details\",actualData)\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err.message);\r\n          });\r\n          // setData(actualData)\r\n        }\r\n        data();\r\n      }, []);\r\n      console.log(\"PLOTS DETAILS\",datasss.data);\r\n      const deletePlots =async ()=>{\r\n           console.log(\"deleted\",deleted);\r\n           if(deleted !== undefined || []){\r\n          try{\r\n          // let deleted=\"6368b1922a6b1af86c8b1807\";\r\n        //  let id = param.deleted\r\n        //  console.log(\"Idsss\",id);\r\n        // let value = deleted;\r\n          await axios.delete(`${baseURL}/api/v1/plot/deletePlots`, {\r\n            data: {\r\n              deleted,\r\n            },\r\n          });\r\n    \r\n          } \r\n        catch(err){\r\n          console.log(err);\r\n        }\r\n         console.log(\"id\",deleted)\r\n      }\r\n    }\r\n\r\n    {/* Modal Triggered Function */}\r\n    const handleCancelClick = () => {\r\n        // setModalOn(false)\r\n        navigate(\"/ViewFiles\");\r\n    }\r\n\r\n    return(\r\n        //Modal Popped Up\r\n        <div className='bg-zinc-200 fixed inset-0 z-50'>\r\n            <div className=\"flex h-screen justify-center items-center\">\r\n                <div className=\"flex-col justify-center bg-white py-2 px-12 border-4 border-sky-500 rounded-xl\" style={{width:\"60%\"}}>\r\n\r\n        {/*Table of the Installments */}   \r\n        <table class=\"w-full table-auto\">\r\n        <thead class=\"bg-gray-100 border-b-2 border-gray-300 text-left w-full\">\r\n          <tr>\r\n         \r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Paid Amounts (Remaining) </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Customer Bank Account No </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Remaining Installment</th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> Installment Date </th> \r\n           \r\n          </tr>\r\n        </thead>\r\n        \r\n        {/*Dynamic Data from the Database*/}  \r\n        <tbody class=\" w-full overflow-y-scroll w-full\" style={{height: \"55vh\"}}>\r\n        {datasss.data && datasss.data\r\n    .filter((x) => x._id === id.id)\r\n    .map((element) => ( \r\n     \r\n                \r\n                  \r\n                  element.totalNoOfInstallment.map((element,index) =>{      \r\n                   \r\n                      return(\r\n                        \r\n                        <tr class=\"bg-white border border-gray-300\" key={index}>\r\n                   <td className='p-3 text-sm text-gray-700'>{ element.customerBankAccountNo}</td>\r\n                    <td className='p-3 text-sm text-gray-700'>{ element.installmentDate }</td> \r\n                    <td className='p-3 text-sm text-gray-700'>{ element.paidAmount }</td>\r\n                    <td className='p-3 text-sm text-gray-700'>{ element.remainingInstallment }</td> \r\n                  </tr>\r\n                    )\r\n})\r\n                    \r\n             \r\n  ))} \r\n              \r\n     \r\n        </tbody>\r\n        </table>\r\n         \r\n                    <div class=\"grid grid-cols-3 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1 xs:grid-cols-1\">\r\n                        <div class=\"\">\r\n                             <button onClick={handleCancelClick} className=\"mt-3 rounded w-52 px-4 py-2 text-white font-serif bg-blue-400 hover:bg-green-600\">Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","D:\\Meta-Admin\\src\\Components\\View Files\\plots.jsx",["210","211","212","213","214","215","216"],[],"import React from \"react\";\r\nimport { useState , useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport { useForm, useFieldArray ,Controller} from \"react-hook-form\";\r\nimport {baseURL} from '../../apis/baseurl';\r\n// import '../index.css';\r\nconst PlotsForm = () => {\r\n  const d =new Date();\r\n  const months = d.getFullYear() + \"-\" +(d.getMonth()+1);\r\n   console.log(\"months\",months);\r\n   const date =d.getFullYear() + \"-\" +(d.getMonth()+1)+ \"-\" + d.getDate();\r\n\r\n   console.log(\"months\",months);\r\n  const [itWorks, setItWorks] = useState(false);\r\n  function handleClick(){ setItWorks(!itWorks) }\r\n  function handleClickOpen(){ \r\n    setItWorks(false) \r\n  }\r\n  function handleClickClose(){ \r\n      setItWorks(true) \r\n    }\r\n            // const fetchsData =async () => {\r\n            //   return await axios.get(`http://localhost:3000/api/recipes/getrecipes`)\r\n            //         .then((response) => console.log(response.data));}\r\n            //         useEffect(() => {\r\n            //           fetchsData();\r\n            //           },[]);\r\n \r\n//   const { register, handleSubmit , reset } = useForm();\r\n  const { register, control, handleSubmit, reset, trigger, setError } = useForm({\r\n    // defaultValues: {}; you can populate the fields by this attribute \r\n  });\r\n  // const createRecipe =useSelector(store=>store.CreateRecipe);\r\n  const { fields, append, remove } = useFieldArray({\r\n    control,\r\n    name: \"totalNoOfInstallment\"\r\n  });\r\n  const handleRegistration =async (value) =>{\r\n      console.log(\"Values\",value);\r\n      try {\r\n       \r\n        console.log(value, \"form values\");\r\n        // console.log(actions, \"form actionss\");\r\n        // setTrue(true);\r\n        if(value !== undefined || \"\"){\r\n        const { data } = await axios.post(\r\n          `${baseURL}/api/v1/plot/addPlot`,\r\n          {\r\n          \r\n            value,months,date\r\n          ,\r\n        } \r\n        );\r\n        console.log(data, \"dataaaa\");\r\n         alert(\"File Added Successfully\");\r\n    reset(); \r\n      } }catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      \r\n      <form\r\n        className=\"w-[70%] bg-white m-auto rounded shadow-xl py-4 spacing-y-4 mt-9 px-12 border \"\r\n        onSubmit={handleSubmit(handleRegistration)}\r\n      >\r\n        <h1 className=\"text-center text-[#DAA520] font-serif  flex justify-center     text-7xl font-semibold mt-10\">Product Details</h1>\r\n        <label className=\"text-gray-600  font-bold\">Product Title</label>\r\n        <input\r\n          className=\"input border-solid border-gray-300 border outline-none py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"title\"\r\n          placeholder=\"Enter Product Title...\"\r\n          // autoFocus\r\n          // ref={register({\r\n          //   required: \"Please enter a job title\",\r\n          // })}\r\n          name=\"regNo\" {...register('regNo', { required: \"Product Title is required.\" })}\r\n        />\r\n        {/* {errors.title && (\r\n          <div className=\"mb-3 text-normal text-red-500\">\r\n            {errors.title.message}\r\n          </div>\r\n        )} */}\r\n\r\n        <label className=\" text-gray-600 font-bold  text-3x1 block \">Security Code</label>\r\n        <input\r\n          className=\"input border-solid border-gray-300 border py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"location\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Security Code...\"\r\n          // ref={register({\r\n          //   required: \"Please enter a location\",\r\n          // })}\r\n          name=\"securityCode\" {...register('securityCode')}\r\n        />\r\n          <br/>\r\n        \r\n       \r\n        \r\n        <label className=\" text-gray-600 font-bold block mt-1\">\r\n          Plot Size\r\n        </label>\r\n        <label className=\" inline-block text-gray-600 font-bold\">\r\n          <input\r\n            className=\" input mt-2 mr-1\"\r\n            // name=\"jobtype\"\r\n            type=\"radio\"\r\n            name=\"plotSize\"\r\n            {...register('plotSize')}\r\n            value=\"5marla\"\r\n            // ref={register({\r\n            //   required: \"Please select a job type\",\r\n            // })}\r\n          />\r\n          5 Marla<br/>\r\n        </label><br/>\r\n        <label className=\" inline-block text-gray-600 font-bold\">\r\n          <input\r\n            className=\"input mt-2 mr-1\"\r\n            // name=\"jobtype\"\r\n            type=\"radio\"\r\n            name=\"plotSize\"\r\n            {...register('plotSize')}\r\n            value=\"7marla\"\r\n            // ref={register({\r\n            //   required: \"Please select a job type\",\r\n            // })}\r\n          />\r\n          7 Marla<br/>\r\n        </label><br/>\r\n        <label className=\" inline-block text-gray-600 font-bold\">\r\n          <input\r\n            className=\"input mt-2 mr-1\"\r\n            // name=\"jobtype\"\r\n            type=\"radio\"\r\n            name=\"plotSize\"\r\n            {...register('plotSize')}\r\n            value=\"10marla\"\r\n            // ref={register({\r\n            //   required: \"Please select a job type\",\r\n            // })}\r\n          />\r\n          10 Marla<br/>\r\n        </label><br/>\r\n        <label className=\" inline-block text-gray-600 font-bold\">\r\n          <input\r\n            className=\"mt-2 mr-1\"\r\n            // name=\"jobtype\"\r\n            type=\"radio\"\r\n            name=\"plotSize\"\r\n            {...register('plotSize')}\r\n            value=\"1kanal\"\r\n            // ref={register({\r\n            //   required: \"Please select a job type\",\r\n            // })}\r\n          />\r\n          1 Kanal<br/>\r\n        </label><br/>\r\n        <label className=\"text-gray-600 font-bold block mt-2\">\r\n          Plot Number\r\n        </label>\r\n        <input\r\n          className=\"input border-solid border-gray-300 border py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"link\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Plot Number\"\r\n          // ref={register({\r\n          //   required: \"Please enter a link\",\r\n          // })}\r\n          name=\"plotNo\" {...register('plotNo', { required: \"plotNumber is required.\" })}\r\n        />\r\n            \r\n        {/* {errors.link && (\r\n          <div className=\"mb-3 text-normal text-red-500 \">\r\n            {errors.link.message}\r\n          </div>\r\n        )} */}\r\n         <label className=\"text-gray-600 font-bold text-3x1 block mt-4\">Block Name</label>\r\n        <input\r\n          className=\"border-solid border-gray-300 border py-2 px-4 w-full rounded text-gray-700\"\r\n          // name=\"location\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Block Name...\"\r\n          // ref={register({\r\n          //   required: \"Please enter a location\",\r\n          // })}\r\n          name=\"blockName\" {...register('blockName', { required: \"blockName is required.\" })}\r\n          \r\n\r\n        />\r\n        <label className=\"text-gray-600 font-bold block mt-4\">Status</label>\r\n        <label className=\"inline-block text-gray-600 font-bold\">\r\n          <input\r\n            className=\"input mt-2 \"\r\n            // name=\"jobtype\"\r\n            type=\"radio\"\r\n            name=\"status\"\r\n            {...register('status')}\r\n            value=\"Open\"\r\n            onClick={handleClickOpen}\r\n            checked = {!itWorks}\r\n            // ref={register({\r\n            //   required: \"Please select a job type\",\r\n            // })}\r\n          />\r\n          Open\r\n        </label>\r\n         <br/>\r\n        <label className=\" inline-block text-gray-600 font-bold\">\r\n          <input\r\n            className=\"input mt-2 mr-1\"\r\n            // name=\"jobtype\"\r\n            type=\"radio\"\r\n            name=\"status\"\r\n            onClick={handleClickClose}\r\n            {...register('status')}\r\n            value=\"Close\"\r\n            // ref={register({\r\n            //   required: \"Please select a job type\",\r\n            // })}\r\n          />\r\n          Close<br/>\r\n        </label>\r\n       \r\n       \r\n      <button className=\"mt-4  bg-[#DAA520] font-serif hover:bg-green-600 text-green-100 border py-3 px-6 font-semibold text-md rounded\"\r\n        type=\"button\"\r\n        onClick={() => append()}\r\n      >\r\n        Add Installment\r\n      </button>\r\n      \r\n\r\n        \r\n        <button\r\n          className=\"mt-4 w-full bg-[#DAA520] font-serif hover:bg-green-600 text-green-100 border py-3 px-6 font-semibold text-md rounded\"\r\n          type=\"submit\"\r\n        >\r\n          Save\r\n        </button>\r\n\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlotsForm;","D:\\Meta-Admin\\src\\Components\\View Files\\UpdateCommunities.jsx",["217","218","219","220","221","222","223","224","225"],[],"import React from 'react'\r\nimport axios from 'axios';\r\nimport \"./viewFiles.scss\"\r\nimport Sidebar from '../Sidebar/Sidebar'\r\nimport {useState,useEffect} from 'react';\r\nimport  {useNavigate, useParams} from 'react-router-dom'\r\nimport Modal from './ModalViewInstallment';\r\nimport {baseURL} from '../../apis/baseurl';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\n// const itemsPerPage = 3;\r\nfunction ViewFiles(currentItems)  {\r\n  const [datasss,setData] =useState([]);\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  const [deleted,selectDeleted]= useState();\r\n  const [search, setSearch] = useState();\r\n  const navigate = useNavigate();\r\n  // console.log(search);\r\n  const param = useParams();\r\n  console.log(\"currentitems1\",currentItems.currentItems);\r\n  const [modalOn, setModalOn] = useState(false);\r\n  let paidAmounts;\r\n  const clicked = (element) =>{\r\n    setModalOn(true)\r\n   \r\n\r\n  }\r\n \r\n  // console.log(id);\r\n  // const \r\n  useEffect( () => {\r\n    async function data(){\r\n  //  await axios.get(\"http://localhost:5000/api/v1/plot/getplot\")\r\n  await fetch(`${baseURL}/api/product/getimageproduct`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `This is an HTTP error: The status is ${response.status}`\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((actualData) =>{\r\n        if(actualData!== [] || \"\"){\r\n        setData(actualData);\r\n        console.log(\"Plots Details\",actualData)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n      // setData(actualData)\r\n    }\r\n    data();\r\n  }, []);\r\n \r\n  \r\n  // useEffect(()=>\r\n  // {\r\n  //   handlePageClick();\r\n  // },[]);\r\n  // console.log(\"PLOTS DETAILS\",datasss);\r\n  const deletePlots =async ()=>{\r\n    console.log(\"deleted\",deleted);\r\n    if(deleted !== undefined || []){\r\n   try{\r\n   \r\n   await axios.delete(`${baseURL}/api/recipes/deleterecipes`, {\r\n     data: {\r\n       deleted,\r\n     },\r\n   });\r\n  \r\n   } \r\n\r\n catch(err){\r\n   console.log(err);\r\n }\r\n \r\n  console.log(\"id\",deleted)\r\n}\r\n}\r\n    //  deletePlots();\r\n  return (\r\n    <div className='viewFiles'>\r\n       {/*Sidebar Component */}\r\n       <Sidebar />\r\n\r\n       {/*Main Section/Container starts here*/}\r\n       <div className=\"viewFilesContainer overflow-auto h-screen\" style={{\r\n        padding:\"2%\"\r\n       }}>\r\n\r\n        {/*Model Triggers Here*/}\r\n        {modalOn && <Modal setModalOn={setModalOn} />}\r\n\r\n        {/*Search Button */}\r\n        <input onChange={(e)=>setSearch(e.target.value)} style={{borderRadius: '50px'}} type=\"text\" class=\" text-black-700 border border-2 border-blue-700  hover:border-2 w-48 bg-gray-100 p-2 my-1 hover:p-2 hover:my-1\" placeholder='search'/>\r\n\r\n        {/*Display All the Plots */}\r\n        <table class=\"w-full table-auto\">\r\n        <thead class=\"bg-gray-100 border-b-2 border-gray-300 text-left w-full\">\r\n          <tr>\r\n          <th class=\" p-3 text-sm font-semibold tracking-wide\">Sr. No</th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\">Product Title </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\">Total Quantity </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\">Price(PKR) </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\">Price($)</th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\">Colors</th>\r\n            \r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> </th>\r\n            <th class=\"p-3 text-sm font-semibold tracking-wide\"> </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"items-center justify-between w-full\">\r\n        {datasss.data ?  datasss.data.filter((element)=>{\r\n          if(search==\"\" || search==null || search==undefined){\r\n            return element\r\n          }\r\n          else if((element.title.includes(search))){\r\n            return element\r\n          }\r\n          return search===\"\" ? element : element.title.includes(search);\r\n        }).map((element ,index)=>{  \r\nreturn (\r\n          <tr class=\"bg-white border border-gray-300\" key={index}>\r\n             <td className='p-3 text-sm text-gray-700'>{index+1}. </td>\r\n            <td className='p-3 text-sm text-gray-700'>{element.title} </td>\r\n           \r\n            {/* <td className='p-3 text-sm text-gray-700'> {element.regNo} </td> */}\r\n            <td className='p-3 text-sm text-gray-700'> {element ? element.quantity: \"\"} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element ?element.priceinPkr : \"\"} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element ?element.priceinDollars : \"\"} </td>\r\n            <td className='p-3 text-sm text-gray-700'> {element.colors} </td>\r\n\r\n          {/* {\r\n            element.totalNoOfInstallment.map((x)=>(\r\n            paidAmounts =  x.paidAmount \r\n            ))\r\n          } */}\r\n            \r\n             \r\n            <td className='p-3 text-sm text-gray-700'>\r\n              <button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded\" onClick={()=>navigate( `/update/${element._id} `)}>Update</button>\r\n            </td>\r\n            <td className='p-3 text-sm text-gray-700'>\r\n            <button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-1 px-4 rounded\" onClick={\r\n              ()=>{\r\n                selectDeleted(element._id)\r\n              \r\n                \r\n                    try{\r\n                    async function deletedProduct(){\r\n             const {data}   =   await  axios.delete(`${baseURL}/api/product/deleteproduct/${element._id}`);\r\n              if(data.status === true){\r\n                await fetch(`${baseURL}/api/product/getproducts`);\r\n                alert(data.message);\r\n                \r\n              }\r\n              else{\r\n                console.log(data);\r\n              }\r\n                    }\r\n                  deletedProduct();\r\n                    } \r\n                 \r\n                  catch(err){\r\n                    console.log(err);\r\n                  }\r\n                  \r\n                   \r\n                 \r\n                 \r\n                \r\n                \r\n                }}>Delete</button>\r\n            </td>\r\n            \r\n          </tr>\r\n\r\n)}):\"Loading....\"}\r\n        </tbody>\r\n        </table>\r\n       </div>\r\n      \r\n      \r\n   \r\n    </div>\r\n  )\r\n}\r\nconst PaginatedItemsss=({itemsPerPage})=> {\r\n  const [datasss,setData] =useState([]);\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n  useEffect( () => {\r\n    async function data(){\r\n  //  await axios.get(\"http://localhost:5000/api/v1/plot/getplot\")\r\n  await fetch(`${baseURL}/api/recipes/getrecipes`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `This is an HTTP error: The status is ${response.status}`\r\n          );\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((actualData) =>{\r\n        if(actualData!== [] || \"\"){\r\n        setData(actualData);\r\n        console.log(\"Plots Details\",actualData)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n      });\r\n      // setData(actualData)\r\n    }\r\n    data();\r\n  }, []);\r\n  \r\n  \r\n  const endOffset = itemOffset + itemsPerPage;\r\n  console.log(`Loading items from ${itemOffset} to ${endOffset}`);\r\n  const currentItems = datasss.data ?(datasss.data.slice(itemOffset, endOffset)):\"\";\r\n  console.log(\"currentItems\",currentItems)\r\n  const pageCount =  Math.ceil((datasss.data ? datasss.data.length : \"\") / itemsPerPage );\r\n  console.log(\"pageCount\",pageCount);\r\n  // Invoke when user click to request another page.\r\n  const handlePageClick = (event) => {\r\n    const newOffset =  ((event.selected * itemsPerPage) %  datasss.data.length);\r\n    console.log(\r\n      `User requested page number ${event.selected}, which is offset ${newOffset}`\r\n    );\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <>\r\n     \r\n      <div className='bg-white '>\r\n         <ViewFiles currentItems={currentItems} />\r\n         <div>\r\n      <ReactPaginate className='flex justify-center  rounded text-white space-x-6 font-bold p-4 bg-green-600 text-xl font-serif'\r\n        breakLabel=\"...\"\r\n        nextLabel=\"next >\"\r\n        onPageChange={handlePageClick}\r\n        pageRangeDisplayed={5}\r\n        pageCount={pageCount}\r\n        previousLabel=\"< previous\"\r\n        renderOnZeroPageCount={null}\r\n      />\r\n      </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n// Add a <div id=\"container\"> to your HTML to see the componend rendered.\r\nexport default  PaginatedItemsss\r\n","D:\\Meta-Admin\\src\\Components\\View Files\\UpdateCommunities1.jsx",["226","227","228","229","230","231","232"],[],"import React from 'react'\r\n// import './Communities.scss';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n// import '../index.css';\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, ErrorMessage } from \"formik\";\r\nimport { useState } from 'react';\r\nimport axios from \"axios\";\r\nconst UpdateCommunities = () => {\r\n    const [file , setFile]=useState();\r\n    const navigate = useNavigate();\r\n    const items = localStorage.getItem(\"userData\");\r\n    console.log(\"items\",items);\r\n    const initialValues = {\r\n        \r\n        communityName: \"\",\r\n        description: \"\",\r\n       website: \"\",\r\n        instagram: \"\",\r\n        youtube: \"\",\r\n        category  :\"\",\r\n        privacy : \"\"\r\n      };\r\n      const validation = Yup.object({\r\n        communityName: Yup.string().required(\"Title Name is Required,it cannot be edited later\"),\r\n        description: Yup.string().required(\"Description is Required\"),\r\n    //     website: Yup.string().required(\"Website URL is Required\"),\r\n    //    instagram: Yup.string().required(\"Instagram URL is Required\"),\r\n    //     youtube: Yup.string().required(\"Youtube URL cannot be Blank\"),\r\n      });\r\n    //    let submission;   \r\n  return (\r\n   <>\r\n   <div className=\"w-fit font-mono  bg-white flex justify-center font-serif m-auto rounded shadow-xl py-10 mt-10 px-12 border\" >\r\n   <section class='community-section '>\r\n\r\n<div class='container  justify-center'>\r\n    <div class='box-card'>\r\n        <h3 class=' text-[#f05024] text-center font-bold text-5xl '>New community</h3>\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={validation}\r\n            \r\n            // onSubmit = {submission()} \r\n             onSubmit={   async (values, actions) => {\r\n              console.log(values, \"Values\");\r\n              try {\r\n                if (file) {\r\n                    console.log(file)\r\n                    const datas = new FormData();\r\n                    datas.append('file', file);\r\n                    console.log(file);\r\n                    console.log(values)\r\n                    // const send={datas,values};\r\n                    try {\r\n                        const { data } = await axios.post(\"http://localhost:3000/api/communities/setcommunities\",\r\n          \r\n                            file === undefined ? null : datas,\r\n                            {\r\n                                params: {\r\n                                    values,items\r\n                                },\r\n                            },\r\n                            {\r\n                                headers: {\r\n                                    mode: 'no-cors',\r\n                                    // 'Authorization': `${admin}`,\r\n                                    accept: \"application/json\",\r\n                                    \"Content-Type\": \"multipart/form-data\",\r\n          \r\n                                },\r\n                            }\r\n          \r\n                        )\r\n                       console.log(data)\r\n          \r\n                        if (data) {\r\n          \r\n                            alert('Communities Added Successfully')\r\n                            actions.resetForm();\r\n                            navigate('/communities');\r\n                        }\r\n          \r\n                    } catch (err) {\r\n                        console.log(err)\r\n                    }\r\n                } else {\r\n                    alert('file is required')\r\n                }\r\n                \r\n            }catch(error){\r\n               console.log(error);\r\n          \r\n            }\r\n            }}\r\n          >\r\n            {(formik) => (\r\n        <Form class='about-contact-form mt-5'>\r\n\r\n            <div class=\"grid lg:col-1\">\r\n                <label for='exampleFormControlTextarea1 ' class=\"label_name  text  text-sm \"><b className=\"text-sm font-bold  \">Community name</b>(cannot be edited later)</label>\r\n                <input type='text' placeholder=' Community name' className='border outline-none border-3 rounded-sm h-10 text-xl mt-3' name='communityName' value={formik.values.communityName}\r\n                        onChange={formik.handleChange}  />\r\n                        <ErrorMessage\r\n                        component=\"div\"\r\n                        className=\"text-red-700 border-none border-none text-sm\"\r\n                        name=\"communityName\"\r\n                      />\r\n                        \r\n               \r\n            </div>\r\n            <div className=\"w-full mt-3 flex justify-center items-center\">\r\n   {file && <img className='h-[15rem] w-full' src={URL.createObjectURL(file)}\r\n  alt='img' />}\r\n  </div>\r\n            <div class=\"rounded-lg border-solid border-gray-300 bg-gray-50 w-full\">\r\n        <div class=\"m-4\">\r\n            {/* <label class=\"inline-block mb-2 text-gray-500\">Upload\r\n                Image(jpg,png,svg,jpeg)</label> */}\r\n            <div class=\"flex items-center justify-center w-full\">\r\n                <label class=\"flex flex-col w-full h-32 border-4 border-dashed hover:bg-gray-100 hover:border-gray-300\">\r\n                    <div class=\"flex flex-col cursor-pointer items-center justify-center pt-7\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\"\r\n                            class=\"w-12 h-12 text-gray-400 group-hover:text-gray-600\" viewBox=\"0 0 20 20\"\r\n                            fill=\"currentColor\">\r\n                            <path fill-rule=\"evenodd\"\r\n                                d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\"\r\n                                clip-rule=\"evenodd\" />\r\n                        </svg>\r\n                        <p class=\"pt-1 text-sm tracking-wider text-gray-400 group-hover:text-gray-600\">\r\n                            Select a Cover photo</p>\r\n                    </div>\r\n                    <input type=\"file\"  onChange= {(e)=>setFile(e.target.files[0])}\r\n                      name=\"image\"  class=\"opacity-0\" />\r\n                </label>\r\n            </div>\r\n        </div>\r\n        {/* <div class=\"flex p-2 space-x-4\">\r\n            <button class=\"px-4 py-2 text-white bg-red-500 rounded shadow-xl\">Cannel</button>\r\n            <button class=\"px-4 py-2 text-white bg-green-500 rounded shadow-xl\">Upload</button>\r\n        </div> */}\r\n    </div>\r\n\r\n            {/* <div class=\"grid lg:col-1 add_photo  justify-content-center mt-5\"><label class=\"filelabel  justify-content-center\">\r\n                    <i class=\"fa fa-camera\" aria-hidden=\"true\"></i>\r\n                    \r\n                    <input class=\"FileUpload1\" id=\"FileInput\" name=\"booking_attachment\" type=\"file\" />\r\n                    <span class=\"title\">\r\n                        Add Cover Photo\r\n                    </span>\r\n                </label>\r\n            </div> */}\r\n            <div class=\"mt-5 grid col-1\">\r\n                <label for='exampleFormControlTextarea1' class=\"label_name\"><b>Description</b>(optional)</label>\r\n                <textarea placeholder=' Description' class=' border border-3 rounded-sm outline-none textarea  mt-3' name='description' value={formik.values.description}\r\n                        onChange={formik.handleChange}  id='form-message' rows='7' cols='20' data-error='Message field is required' required=''></textarea>\r\n                        <ErrorMessage\r\n                        component=\"div\"\r\n                        className=\"text-red-700 border-none border-none text-sm\"\r\n                        name=\"description\"\r\n                      />\r\n                <div class='help-block with-errors'></div>\r\n            </div>\r\n\r\n            <div class=\"mt-5 grid lg:col-1  \">\r\n                <label for='exampleFormControlTextarea1 ' class=\" label_name\"><b>Category</b></label>\r\n                <select name=\"category\" onChange={formik.handleChange}   class=' form  border border-3 rounded-sm outline-none h-[2.5rem] border-gray-200  mt-1'>\r\n                    <option name=\"category\" onChange={formik.handleChange} selected> Select Category</option>\r\n                    <option name=\"category\" onChange={formik.handleChange}  value='Baking'>Baking</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='Cooking Method'>Cooking Method</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='Diet'>Diet</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='Family Friendly'>Family Friendly</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='Global Flavours'>Global Flavours</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='Healthy'>Healthy</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='Indulge'>Indulge</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='LevelUp'>Level Up</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='Quick&Simple'>Quick&Simple</option>\r\n                    <option name=\"category\" onChange={formik.handleChange} value='Seasonal'>Seasonal</option>y\r\n                </select>\r\n            </div> \r\n            <div class=\"mt-5\">\r\n                <label for='exampleFormControlTextarea1' class=\"label_name\"><b>Privacy</b></label>\r\n                <div class='text-xl '>\r\n                    <input id='radio-1' name='privacy'  onChange={formik.handleChange} value={\"Anyone can discover and join\"} type='radio' checked/>\r\n                    <label for='radio-1' class='radio-label' value={\"Anyone can discover and join\"}> Anyone can discover and join</label>\r\n                </div>\r\n\r\n                <div class='text-xl '>\r\n                    <input id='radio-2'  name='privacy' value={\"Not visible on discovery, people need permission to join\"}  onChange={formik.handleChange} type='radio'/>\r\n                    <label for='radio-2' class='radio-label'> Not visible on discovery, people need permission to join</label>\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-2\">\r\n                <label for='exampleFormControlTextarea1' class=\"label_name\"><b>Permissions</b></label>\r\n                <div class='text-xl  '>\r\n                    <input id='radio-3' name='permissions' onChange={formik.handleChange}   value=\"Anyone can add recipes\" type='radio'   />\r\n                    <label for='radio-3' class='text-xl '>Anyone can add recipes</label>\r\n                </div>\r\n\r\n                <div class='text-xl '>\r\n                    <input id='radio-4' name='permissions' onChange={formik.handleChange} value=\"Only admins can add recipes\" type='radio'  />\r\n                    <label for='radio-4' class='radio-label'>Only admins can add recipes</label>\r\n                </div>\r\n             </div> \r\n            <div class=\"mt-3\">\r\n                <label for='exampleFormControlTextarea1' class=\"label_name \"><b class=\"label_name text-xl\">Web & Social </b>(optional)</label>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10\">\r\n                        <label className=\" text-[#f05024] font-serif  font-bold text-lg\"><i class=\"fa fa-paperclip icon text-green-500 mt-5\" aria-hidden=\"true\"></i> Website </label>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <a><i class=\"fa fa-pencil icon mt-5\" aria-hidden=\"true\"></i></a><input type='text' placeholder=' Enter Website URL' class=' text-xl w-[400px] border-gray-200 outline-none border  border-b-7 rounded-sm h-10  mt-3'  name='website' value={formik.values.website}\r\n                        onChange={formik.handleChange}  />\r\n                        <ErrorMessage\r\n                        component=\"div\"\r\n                        className=\"text-red-700 border-none border-none text-sm\"\r\n                        name=\"website\"\r\n                      />\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-10\">\r\n                        <label className=\" text-[#f05024] font-serif font-bold text-lg\"><i class=\"fa fa-instagram  text-pink-500 icon mt-5\" aria-hidden=\"true\"></i> Instagram </label>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <a><i class=\"fa fa-pencil  icon mt-5\" aria-hidden=\"true\"></i></a><input type='text' placeholder=' Enter Instagram URL' class=' w-[400px] text-xl border-gray-200 outline-none border  border-b-7 rounded-sm h-10  mt-3'  name='instagram' value={formik.values.instagram}\r\n                        onChange={formik.handleChange} />\r\n                        <ErrorMessage\r\n                        component=\"div\"\r\n                        className=\"text-red-700 border-none border-none text-sm\"\r\n                        name=\"instagram\"\r\n                      />\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-8\">\r\n                        <label className=\" text-[#f05024] font-serif font-bold text-lg\"><i class=\"fa fa-youtube-play  text-red-500 mt-5\" name=\"youtube\" aria-hidden=\"true\"></i> Youtube </label>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"col-md-2\">\r\n                        <a><i class=\"fa fa-pencil icon mt-5\" aria-hidden=\"true\"></i></a><input type='text' placeholder=' Enter Youtube URL' class=' text-xl w-[400px] border-gray-200 outline-none border  border-b-7 rounded-sm h-10  mt-3'  name='youtube' data-error='Name field is required' value={formik.values.youtube}\r\n                        onChange={formik.handleChange} required='' />\r\n                        <ErrorMessage\r\n                        component=\"div\"\r\n                        className=\"text-red-700 border-none border-none text-sm\"\r\n                        name=\"youtube\"\r\n                      />\r\n\r\n\r\n                    </div>\r\n\r\n                    \r\n            </div>\r\n            <div class=\"add  mt-4 space-x-4   flex justify-center  text-white \">\r\n            <button className=\" w-[100px] bg-[#8D4199]  rounded-lg font-serif font-bold text-white h-[50px] hover:bg-green-400  shadow-lg \"   >Cancel</button>\r\n                \r\n                <div  >\r\n                    <input className=\" w-[100px] bg-[#8D4199]  rounded-lg font-serif font-bold text-white h-[50px] hover:bg-green-400  shadow-lg \" type=\"submit\" />\r\n                </div>\r\n                </div>\r\n    </div>\r\n\r\n\r\n\r\n  \r\n        </Form>\r\n         )}\r\n         </Formik>\r\n         \r\n</div>\r\n</div>\r\n</section>\r\n</div>\r\n   </>\r\n  )\r\n}\r\n\r\nexport default UpdateCommunities","D:\\Meta-Admin\\src\\Components\\Logout\\Logout.jsx",[],[],"D:\\Meta-Admin\\src\\Components\\View Files\\ViewAboutus.jsx",["233","234","235","236","237","238","239","240","241","242","243","244"],[],"D:\\Meta-Admin\\src\\apis\\baseurl.js",[],[],"D:\\Meta-Admin\\src\\Components\\Sidebar\\Sidebar.jsx",["245"],[],{"ruleId":"246","severity":1,"message":"247","line":6,"column":8,"nodeType":"248","messageId":"249","endLine":6,"endColumn":17},{"ruleId":"246","severity":1,"message":"250","line":16,"column":8,"nodeType":"248","messageId":"249","endLine":16,"endColumn":22},{"ruleId":"246","severity":1,"message":"251","line":20,"column":8,"nodeType":"248","messageId":"249","endLine":20,"endColumn":24},{"ruleId":"246","severity":1,"message":"252","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":21},{"ruleId":"246","severity":1,"message":"253","line":6,"column":8,"nodeType":"248","messageId":"249","endLine":6,"endColumn":24},{"ruleId":"246","severity":1,"message":"254","line":9,"column":10,"nodeType":"248","messageId":"249","endLine":9,"endColumn":42},{"ruleId":"246","severity":1,"message":"255","line":13,"column":12,"nodeType":"248","messageId":"249","endLine":13,"endColumn":17},{"ruleId":"246","severity":1,"message":"256","line":13,"column":19,"nodeType":"248","messageId":"249","endLine":13,"endColumn":27},{"ruleId":"246","severity":1,"message":"257","line":14,"column":12,"nodeType":"248","messageId":"249","endLine":14,"endColumn":18},{"ruleId":"246","severity":1,"message":"258","line":14,"column":20,"nodeType":"248","messageId":"249","endLine":14,"endColumn":29},{"ruleId":"246","severity":1,"message":"259","line":15,"column":11,"nodeType":"248","messageId":"249","endLine":15,"endColumn":19},{"ruleId":"246","severity":1,"message":"260","line":4,"column":34,"nodeType":"248","messageId":"249","endLine":4,"endColumn":44},{"ruleId":"246","severity":1,"message":"261","line":14,"column":10,"nodeType":"248","messageId":"249","endLine":14,"endColumn":17},{"ruleId":"246","severity":1,"message":"262","line":14,"column":19,"nodeType":"248","messageId":"249","endLine":14,"endColumn":29},{"ruleId":"246","severity":1,"message":"263","line":15,"column":21,"nodeType":"248","messageId":"249","endLine":15,"endColumn":34},{"ruleId":"246","severity":1,"message":"264","line":16,"column":23,"nodeType":"248","messageId":"249","endLine":16,"endColumn":35},{"ruleId":"246","severity":1,"message":"265","line":19,"column":10,"nodeType":"248","messageId":"249","endLine":19,"endColumn":17},{"ruleId":"246","severity":1,"message":"259","line":20,"column":9,"nodeType":"248","messageId":"249","endLine":20,"endColumn":17},{"ruleId":"246","severity":1,"message":"266","line":21,"column":9,"nodeType":"248","messageId":"249","endLine":21,"endColumn":28},{"ruleId":"246","severity":1,"message":"267","line":46,"column":12,"nodeType":"248","messageId":"249","endLine":46,"endColumn":24},{"ruleId":"246","severity":1,"message":"268","line":79,"column":12,"nodeType":"248","messageId":"249","endLine":79,"endColumn":21},{"ruleId":"246","severity":1,"message":"269","line":85,"column":12,"nodeType":"248","messageId":"249","endLine":85,"endColumn":24},{"ruleId":"246","severity":1,"message":"270","line":97,"column":18,"nodeType":"248","messageId":"249","endLine":97,"endColumn":24},{"ruleId":"246","severity":1,"message":"271","line":97,"column":26,"nodeType":"248","messageId":"249","endLine":97,"endColumn":32},{"ruleId":"246","severity":1,"message":"272","line":1,"column":17,"nodeType":"248","messageId":"249","endLine":1,"endColumn":26},{"ruleId":"246","severity":1,"message":"273","line":2,"column":8,"nodeType":"248","messageId":"249","endLine":2,"endColumn":16},{"ruleId":"246","severity":1,"message":"274","line":8,"column":10,"nodeType":"248","messageId":"249","endLine":8,"endColumn":15},{"ruleId":"246","severity":1,"message":"275","line":28,"column":9,"nodeType":"248","messageId":"249","endLine":28,"endColumn":21},{"ruleId":"246","severity":1,"message":"260","line":4,"column":34,"nodeType":"248","messageId":"249","endLine":4,"endColumn":44},{"ruleId":"246","severity":1,"message":"261","line":14,"column":10,"nodeType":"248","messageId":"249","endLine":14,"endColumn":17},{"ruleId":"246","severity":1,"message":"262","line":14,"column":19,"nodeType":"248","messageId":"249","endLine":14,"endColumn":29},{"ruleId":"246","severity":1,"message":"263","line":15,"column":21,"nodeType":"248","messageId":"249","endLine":15,"endColumn":34},{"ruleId":"246","severity":1,"message":"264","line":16,"column":23,"nodeType":"248","messageId":"249","endLine":16,"endColumn":35},{"ruleId":"246","severity":1,"message":"265","line":19,"column":10,"nodeType":"248","messageId":"249","endLine":19,"endColumn":17},{"ruleId":"246","severity":1,"message":"259","line":20,"column":9,"nodeType":"248","messageId":"249","endLine":20,"endColumn":17},{"ruleId":"246","severity":1,"message":"266","line":21,"column":9,"nodeType":"248","messageId":"249","endLine":21,"endColumn":28},{"ruleId":"246","severity":1,"message":"267","line":46,"column":12,"nodeType":"248","messageId":"249","endLine":46,"endColumn":24},{"ruleId":"246","severity":1,"message":"268","line":79,"column":12,"nodeType":"248","messageId":"249","endLine":79,"endColumn":21},{"ruleId":"246","severity":1,"message":"269","line":85,"column":12,"nodeType":"248","messageId":"249","endLine":85,"endColumn":24},{"ruleId":"246","severity":1,"message":"270","line":97,"column":18,"nodeType":"248","messageId":"249","endLine":97,"endColumn":24},{"ruleId":"246","severity":1,"message":"271","line":97,"column":26,"nodeType":"248","messageId":"249","endLine":97,"endColumn":32},{"ruleId":"246","severity":1,"message":"276","line":3,"column":20,"nodeType":"248","messageId":"249","endLine":3,"endColumn":24},{"ruleId":"246","severity":1,"message":"277","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":13},{"ruleId":"246","severity":1,"message":"278","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":17},{"ruleId":"246","severity":1,"message":"279","line":7,"column":10,"nodeType":"248","messageId":"249","endLine":7,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":29,"column":35,"nodeType":"282","messageId":"283","endLine":29,"endColumn":37},{"ruleId":"280","severity":1,"message":"281","line":29,"column":74,"nodeType":"282","messageId":"283","endLine":29,"endColumn":76},{"ruleId":"284","severity":1,"message":"285","line":52,"column":7,"nodeType":"286","endLine":52,"endColumn":80},{"ruleId":"246","severity":1,"message":"287","line":11,"column":11,"nodeType":"248","messageId":"249","endLine":11,"endColumn":18},{"ruleId":"246","severity":1,"message":"288","line":6,"column":10,"nodeType":"248","messageId":"249","endLine":6,"endColumn":17},{"ruleId":"246","severity":1,"message":"289","line":6,"column":19,"nodeType":"248","messageId":"249","endLine":6,"endColumn":32},{"ruleId":"246","severity":1,"message":"260","line":6,"column":34,"nodeType":"248","messageId":"249","endLine":6,"endColumn":44},{"ruleId":"246","severity":1,"message":"290","line":17,"column":9,"nodeType":"248","messageId":"249","endLine":17,"endColumn":14},{"ruleId":"246","severity":1,"message":"291","line":21,"column":9,"nodeType":"248","messageId":"249","endLine":21,"endColumn":16},{"ruleId":"246","severity":1,"message":"292","line":53,"column":9,"nodeType":"248","messageId":"249","endLine":53,"endColumn":20},{"ruleId":"293","severity":1,"message":"294","line":117,"column":55,"nodeType":"295","messageId":"296","endLine":117,"endColumn":57},{"ruleId":"280","severity":1,"message":"281","line":118,"column":20,"nodeType":"282","messageId":"283","endLine":118,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":118,"column":50,"nodeType":"282","messageId":"283","endLine":118,"endColumn":52},{"ruleId":"246","severity":1,"message":"273","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":16},{"ruleId":"246","severity":1,"message":"297","line":14,"column":10,"nodeType":"248","messageId":"249","endLine":14,"endColumn":20},{"ruleId":"246","severity":1,"message":"298","line":14,"column":22,"nodeType":"248","messageId":"249","endLine":14,"endColumn":35},{"ruleId":"246","severity":1,"message":"299","line":15,"column":18,"nodeType":"248","messageId":"249","endLine":15,"endColumn":31},{"ruleId":"246","severity":1,"message":"290","line":19,"column":9,"nodeType":"248","messageId":"249","endLine":19,"endColumn":14},{"ruleId":"246","severity":1,"message":"300","line":22,"column":7,"nodeType":"248","messageId":"249","endLine":22,"endColumn":18},{"ruleId":"246","severity":1,"message":"291","line":23,"column":9,"nodeType":"248","messageId":"249","endLine":23,"endColumn":16},{"ruleId":"246","severity":1,"message":"292","line":85,"column":9,"nodeType":"248","messageId":"249","endLine":85,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":140,"column":20,"nodeType":"282","messageId":"283","endLine":140,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":140,"column":50,"nodeType":"282","messageId":"283","endLine":140,"endColumn":52},{"ruleId":"246","severity":1,"message":"301","line":189,"column":18,"nodeType":"248","messageId":"249","endLine":189,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":5,"column":8,"nodeType":"248","messageId":"249","endLine":5,"endColumn":17},{"ruleId":"246","severity":1,"message":"260","line":2,"column":34,"nodeType":"248","messageId":"249","endLine":2,"endColumn":44},{"ruleId":"246","severity":1,"message":"302","line":7,"column":11,"nodeType":"248","messageId":"249","endLine":7,"endColumn":28},{"ruleId":"246","severity":1,"message":"303","line":11,"column":53,"nodeType":"248","messageId":"249","endLine":11,"endColumn":60},{"ruleId":"246","severity":1,"message":"304","line":11,"column":62,"nodeType":"248","messageId":"249","endLine":11,"endColumn":70},{"ruleId":"246","severity":1,"message":"305","line":16,"column":15,"nodeType":"248","messageId":"249","endLine":16,"endColumn":21},{"ruleId":"246","severity":1,"message":"270","line":16,"column":23,"nodeType":"248","messageId":"249","endLine":16,"endColumn":29},{"ruleId":"246","severity":1,"message":"271","line":16,"column":31,"nodeType":"248","messageId":"249","endLine":16,"endColumn":37},{"ruleId":"246","severity":1,"message":"306","line":5,"column":44,"nodeType":"248","messageId":"249","endLine":5,"endColumn":49},{"ruleId":"246","severity":1,"message":"303","line":5,"column":51,"nodeType":"248","messageId":"249","endLine":5,"endColumn":58},{"ruleId":"246","severity":1,"message":"304","line":5,"column":60,"nodeType":"248","messageId":"249","endLine":5,"endColumn":68},{"ruleId":"246","severity":1,"message":"299","line":10,"column":20,"nodeType":"248","messageId":"249","endLine":10,"endColumn":33},{"ruleId":"246","severity":1,"message":"292","line":39,"column":13,"nodeType":"248","messageId":"249","endLine":39,"endColumn":24},{"ruleId":"307","severity":1,"message":"308","line":61,"column":5,"nodeType":"309","messageId":"310","endLine":61,"endColumn":37},{"ruleId":"246","severity":1,"message":"272","line":2,"column":21,"nodeType":"248","messageId":"249","endLine":2,"endColumn":30},{"ruleId":"246","severity":1,"message":"260","line":4,"column":34,"nodeType":"248","messageId":"249","endLine":4,"endColumn":44},{"ruleId":"246","severity":1,"message":"311","line":15,"column":12,"nodeType":"248","messageId":"249","endLine":15,"endColumn":23},{"ruleId":"246","severity":1,"message":"303","line":30,"column":51,"nodeType":"248","messageId":"249","endLine":30,"endColumn":58},{"ruleId":"246","severity":1,"message":"304","line":30,"column":60,"nodeType":"248","messageId":"249","endLine":30,"endColumn":68},{"ruleId":"246","severity":1,"message":"305","line":34,"column":11,"nodeType":"248","messageId":"249","endLine":34,"endColumn":17},{"ruleId":"246","severity":1,"message":"271","line":34,"column":27,"nodeType":"248","messageId":"249","endLine":34,"endColumn":33},{"ruleId":"246","severity":1,"message":"273","line":9,"column":8,"nodeType":"248","messageId":"249","endLine":9,"endColumn":16},{"ruleId":"246","severity":1,"message":"297","line":14,"column":10,"nodeType":"248","messageId":"249","endLine":14,"endColumn":20},{"ruleId":"246","severity":1,"message":"298","line":14,"column":22,"nodeType":"248","messageId":"249","endLine":14,"endColumn":35},{"ruleId":"246","severity":1,"message":"290","line":19,"column":9,"nodeType":"248","messageId":"249","endLine":19,"endColumn":14},{"ruleId":"246","severity":1,"message":"300","line":22,"column":7,"nodeType":"248","messageId":"249","endLine":22,"endColumn":18},{"ruleId":"246","severity":1,"message":"291","line":23,"column":9,"nodeType":"248","messageId":"249","endLine":23,"endColumn":16},{"ruleId":"246","severity":1,"message":"292","line":63,"column":9,"nodeType":"248","messageId":"249","endLine":63,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":118,"column":20,"nodeType":"282","messageId":"283","endLine":118,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":118,"column":50,"nodeType":"282","messageId":"283","endLine":118,"endColumn":52},{"ruleId":"246","severity":1,"message":"312","line":3,"column":10,"nodeType":"248","messageId":"249","endLine":3,"endColumn":14},{"ruleId":"313","severity":1,"message":"314","line":214,"column":25,"nodeType":"286","endLine":214,"endColumn":28},{"ruleId":"284","severity":1,"message":"315","line":214,"column":25,"nodeType":"286","endLine":214,"endColumn":28},{"ruleId":"313","severity":1,"message":"314","line":234,"column":25,"nodeType":"286","endLine":234,"endColumn":28},{"ruleId":"284","severity":1,"message":"315","line":234,"column":25,"nodeType":"286","endLine":234,"endColumn":28},{"ruleId":"313","severity":1,"message":"314","line":255,"column":25,"nodeType":"286","endLine":255,"endColumn":28},{"ruleId":"284","severity":1,"message":"315","line":255,"column":25,"nodeType":"286","endLine":255,"endColumn":28},{"ruleId":"246","severity":1,"message":"312","line":9,"column":10,"nodeType":"248","messageId":"249","endLine":9,"endColumn":14},{"ruleId":"246","severity":1,"message":"273","line":10,"column":8,"nodeType":"248","messageId":"249","endLine":10,"endColumn":16},{"ruleId":"246","severity":1,"message":"297","line":15,"column":10,"nodeType":"248","messageId":"249","endLine":15,"endColumn":20},{"ruleId":"246","severity":1,"message":"298","line":15,"column":22,"nodeType":"248","messageId":"249","endLine":15,"endColumn":35},{"ruleId":"246","severity":1,"message":"299","line":16,"column":18,"nodeType":"248","messageId":"249","endLine":16,"endColumn":31},{"ruleId":"246","severity":1,"message":"259","line":18,"column":9,"nodeType":"248","messageId":"249","endLine":18,"endColumn":17},{"ruleId":"246","severity":1,"message":"290","line":20,"column":9,"nodeType":"248","messageId":"249","endLine":20,"endColumn":14},{"ruleId":"246","severity":1,"message":"300","line":23,"column":7,"nodeType":"248","messageId":"249","endLine":23,"endColumn":18},{"ruleId":"246","severity":1,"message":"291","line":24,"column":9,"nodeType":"248","messageId":"249","endLine":24,"endColumn":16},{"ruleId":"246","severity":1,"message":"292","line":64,"column":9,"nodeType":"248","messageId":"249","endLine":64,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":119,"column":20,"nodeType":"282","messageId":"283","endLine":119,"endColumn":22},{"ruleId":"280","severity":1,"message":"281","line":119,"column":50,"nodeType":"282","messageId":"283","endLine":119,"endColumn":52},{"ruleId":"246","severity":1,"message":"259","line":7,"column":11,"nodeType":"248","messageId":"249","endLine":7,"endColumn":19},"no-unused-vars","'ViewFiles' is defined but never used.","Identifier","unusedVar","'PaginatedItems' is defined but never used.","'PaginatedItemsss' is defined but never used.","'OpenInNewIcon' is defined but never used.","'ViewHeadlineIcon' is defined but never used.","'SentimentVeryDissatisfiedRounded' is defined but never used.","'month' is assigned a value but never used.","'setMonth' is assigned a value but never used.","'months' is assigned a value but never used.","'setMonths' is assigned a value but never used.","'navigate' is assigned a value but never used.","'Controller' is defined but never used.","'itWorks' is assigned a value but never used.","'setItWorks' is assigned a value but never used.","'setFileObject' is assigned a value but never used.","'setFileArray' is assigned a value but never used.","'fieldss' is assigned a value but never used.","'uploadMultipleFiles' is assigned a value but never used.","'handleChange' is defined but never used.","'handleAdd' is defined but never used.","'handleRemove' is defined but never used.","'append' is assigned a value but never used.","'remove' is assigned a value but never used.","'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","'Items' is defined but never used.","'currentItems' is assigned a value but never used.","'Form' is defined but never used.","'axios' is defined but never used.","'baseURL' is defined but never used.","'Toast' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'control' is assigned a value but never used.","'useForm' is defined but never used.","'useFieldArray' is defined but never used.","'param' is assigned a value but never used.","'clicked' is assigned a value but never used.","'deletePlots' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'itemOffset' is assigned a value but never used.","'setItemOffset' is assigned a value but never used.","'selectDeleted' is assigned a value but never used.","'paidAmounts' is defined but never used.","'setData' is assigned a value but never used.","'handleCancelClick' is assigned a value but never used.","'trigger' is assigned a value but never used.","'setError' is assigned a value but never used.","'fields' is assigned a value but never used.","'reset' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'handleClick' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]